{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","React","useState","Data","setData","Sum","Total","Summary","setSummary","Customer","setCustomer","Tier","setTier","tier","Badge","variant","MoneyFormat","num","Math","abs","sign","toFixed","useEffect","a","axios","get","res","data","list","summary","total","summarytier","_","chain","uniqBy","value","callAPI","Container","style","marginTop","Row","Col","Table","bordered","hover","size","backgroundColor","color","lifetimevalue","map","i","tier_name","total_members","total_amount","striped","customername","customerphone","customertier","totalamount","totaltransaction","totalreward","remainingpoint","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.964d737c.chunk.js","sourcesContent":["import {Table,Container,Row,Col,Badge} from 'react-bootstrap'\nimport _ from 'lodash'\nimport axios from 'axios'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport React from 'react';\n\nexport default function App() {\n\n  const [Data,setData] = React.useState([])\n  const [Summary,setSummary] = React.useState({Sum:{},Total:0})\n  const [Customer,setCustomer] = React.useState([])\n  const [Tier,setTier] = React.useState([])\n\n\n  React.useEffect(()=>{\n      async function callAPI(){\n        var res = await axios.get('https://wegivmerchantapp.firebaseapp.com/exam/bi-member-day-2020-04-01.json') \n         setData(res.data.data.list)\n         setSummary({Sum:res.data.data.summary,Total:res.data.data.total})\n         setTier(res.data.data.summarytier)\n         setCustomer(_.chain(Data).uniqBy('customername').value())\n      }\n      callAPI()\n  },[])\n\n\n  function tier(tier){\n    if(tier===\"Gold\"){\n      return <Badge variant=\"warning\">{tier}</Badge> \n    }\n    if(tier===\"Platinum\"){\n      return <Badge variant=\"info\">{tier}</Badge> \n    }\n    if(tier===\"Silver\"){\n      return <Badge variant=\"Secondary\">{tier}</Badge> \n    }\n    if(tier===\"White\"){\n      return <Badge variant=\"light\">{tier}</Badge> \n    }\n    if(tier===\"Black\"){\n      return <Badge variant=\"dark\">{tier}</Badge> \n    }\n\n  }\n\n\n  function MoneyFormat(num) {\n    return Math.abs(num) > 999 ? Math.sign(num)*((Math.abs(num)/1000).toFixed(1)) + 'K' : Math.sign(num)*Math.abs(num)\n}\n\n\n\n\n  return (\n    <div>\n      <Container style={{marginTop:10}}>\n\n        <Row>\n          <Col>\n          <Table bordered hover size=\"sm\">\n          <thead>\n      <tr style={{backgroundColor:'#fed049',color:'white'}}><th>Summary</th></tr>\n  </thead>\n\n  <tbody>\n\n    <tr>\n      <td>Total Member</td>\n      <td>{Summary.Total}</td>\n    </tr>\n    <tr>\n    <td>Total Rev . <Badge variant=\"success\">THB</Badge> </td>\n      <td>{MoneyFormat(Summary.Sum.lifetimevalue)}</td>\n\n    </tr>\n\n  </tbody>\n</Table>\n          </Col>\n\n      {Tier.map((i)=>(\n            <Col key={i.tier_name}>\n            <Table bordered hover size=\"sm\">\n            <thead>\n        <tr><th>{tier(i.tier_name)}</th></tr>\n    </thead>\n  \n    <tbody>\n  \n      <tr>\n        <td>Total Member</td>\n        <td>{i.total_members}</td>\n      </tr>\n      <tr>\n      <td>Total Rev . <Badge variant=\"success\">THB</Badge> </td>\n        <td>{MoneyFormat(i.total_amount)}</td>\n  \n      </tr>\n  \n    </tbody>\n  \n  </Table>\n            </Col>\n      ))}\n\n\n\n        </Row>\n\n\n      <Table striped bordered hover>\n  <thead>\n    <tr>\n      <th>Name</th>\n      <th>Tel</th>\n      <th>Tier</th>\n      <th>LTV</th>\n      <th>Total Trans.</th>\n      <th>Total Point</th>\n      <th>Remaining Point</th>\n    </tr>\n  </thead>\n  <tbody>\n    \n    \n      {Customer.map((i)=>(\n        <tr key={`Key:${i.customername}`}>\n              <td>{i.customername}</td>\n              <td>{i.customerphone}</td>\n              <td>{tier(i.customertier)}</td>\n              <td>{i.totalamount}</td>\n              <td>{i.totaltransaction}</td>\n              <td>{i.totalreward}</td>\n              <td>{i.remainingpoint}</td>\n              </tr>\n      ))}\n\n\n    \n  </tbody>\n</Table>\n      </Container>\n\n\n    </div>\n  );\n}\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}